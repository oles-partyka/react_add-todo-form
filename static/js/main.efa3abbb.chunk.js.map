{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","setTitle","setUserId","errorUser","setErrorUser","errorTitle","setErrorTitle","availableTodos","setAvailableTodos","method","onSubmit","event","preventDefault","trimedTitle","trim","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","htmlFor","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efa3abbb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a data-id={user.id} className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst getTodoId = (todos: TodoWithUser[]) => {\n  const id = Math.max(...todos.map(todo => todo.id));\n\n  return id + 1;\n};\n\nconst todos: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [errorUser, setErrorUser] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [availableTodos, setAvailableTodos] = useState(todos);\n\n  const clearState = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitle = (value: string) => {\n    setErrorTitle(false);\n    setTitle(value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimedTitle = title.trim();\n\n    setErrorUser(!userId);\n    setErrorTitle(!trimedTitle);\n\n    if (!trimedTitle || !userId) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: getTodoId(availableTodos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setAvailableTodos(currentTodos => [...currentTodos, newTodo]);\n\n    clearState();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => (\n                handleTitle(event.target.value)\n              )}\n            />\n          </label>\n          {errorTitle\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setErrorUser(false);\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={availableTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}